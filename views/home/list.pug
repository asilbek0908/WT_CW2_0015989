//- Including the links.pug file
include ../links.pug
doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    title Adding Page
    link(rel='stylesheet' href='/css/style.css')
    link(rel='stylesheet' href='/css/list.css')
  body
    .container
      h1.text-heading Adding Events to List
      //- Name of Event
      div
        label(for="eventName").form-label Name of Event
        input(type="text", class="form-control", id="eventName", name="eventName")
      //- Date of Event
      div
        label(for="eventDateTime").form-label Date of Event
        div.input-group.date(id="datetimepicker1", data-target-input="nearest")
          input(type="text", class="form-control datetimepicker-input", data-target="#datetimepicker1", id="eventDateTime", name="eventDateTime")
          div.input-group-append(data-target="#datetimepicker1", data-toggle="datetimepicker")
      //- Location of Event
      div
        label(for="venue").form-label Location of Event
        input(type="text", class="form-control", id="venue", name="venue")
      //- Phone Number
      div
        label(for="contactPhone").form-label Phone Number
        input(type="tel", class="form-control", id="contactPhone", name="contactPhone")
      //- Seat Number
      div
        label(for="seat").form-label Seat Number
        input(type="text", class="form-control", id="seat", name="seat", required)
      //- Brief description
      div
        label(for="description").form-label Brief description
        textarea.form-control(id="description", name="description", rows="4", cols="50" placeholder="Write a brief description about event")
      //- Submit button
      button(type="submit", class="btn btn-add", onclick="submitForm('#{mode}')") #{mode}

      span &nbsp;
      button(type="button", class="btn btn-home", onclick="window.location.href='/index.html'") Home page

  script.
    const format = 'DD/MM/YYYY HH:mm';
    const picker = new tempusDominus.TempusDominus(document.getElementById('datetimepicker1'), {
      localization: {
        'locale': 'fr'
      }
    });
    
    picker.dates.formatInput = function(date) {
      return moment(date).format(format);
    };
    
    if ("#{mode}" === "Update") {
      const eventData = !{JSON.stringify(eventData || {})}.ticket;
      document.getElementById('eventName').value = eventData.eventName || '';

      picker.dates.setValue(
        new tempusDominus.DateTime(moment(eventData.eventDateTime, format))
      );

      document.getElementById('venue').value = eventData.venue || '';
      document.getElementById('contactPhone').value = eventData.contactPhone || '';
      document.getElementById('seat').value = eventData.seat || '';
      document.getElementById('description').value = eventData.description || '';

    }

    function submitForm() {
  
      const eventData = {
        eventName: document.getElementById('eventName').value,
        eventDateTime: document.getElementById('eventDateTime').value,
        venue: document.getElementById('venue').value,
        contactPhone: document.getElementById('contactPhone').value,
        seat: document.getElementById('seat').value,
        description: document.getElementById('description').value,
      };
    
      const url = "#{mode}" === "Update" ? `/api/ticket/${!{JSON.stringify(eventData || {})}.id}` : '/api/ticket';
      const method = "#{mode}" === "Update" ? 'put' : 'post';
    
      axios[method](url, eventData)
        .then(response => {
          alert('Success!');
          location.href = '/';
        })
        .catch(error => {
          if(error.response)
            alert(JSON.stringify(error.response.data.errors));
          else
            alert(error);
        });
    }
